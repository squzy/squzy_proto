syntax = 'proto3';

package squzy.server.v1.service;

service Server {
    rpc GetList (GetListRequest) returns (GetListResponse);
    rpc AddScheduler (AddSchedulerRequest) returns (AddSchedulerResponse);
    rpc RemoveScheduler (RemoveSchedulerRequest) returns (RemoveSchedulerResponse);
    rpc RunScheduler (RunSchedulerRequest) returns (RunSchedulerResponse);
    rpc StopScheduler (StopSchedulerRequest) returns (StopSchedulerResponse);
}

enum Status {
    RUNNED = 0;
    STOPPED = 1;
}

message SchedulerListItem {
    string id = 1;
    Status status = 2;
}

message GetListRequest {
}

message GetListResponse {
    repeated SchedulerListItem list = 1;
}

message SiteMapCheck {
    string url = 1;
    int32 concurrency = 2;
}

message TcpCheck {
    string host = 1;
    int32 port = 2;
}

message GrpcCheck {
    string service = 1;
    string host = 2;
    int32 port = 3;
}

message HttpCheck {
    string method = 1;
    string url = 2;
    map<string, string> headers = 3;
    int32 statusCode = 4;
}

message MongoCheck {
    string url = 1;
}

message PostgresCheck {
    string dbName = 1;
    string host = 2;
    int32 port = 3;
    string user = 4;
    string password = 5;
}

message CassandraCheck {
    string cluster = 1;
    string user = 2;
    string password = 3;
}

message MysqlCheck {
    string dbName = 1;
    string host = 2;
    int32 port = 3;
    string user = 4;
    string password = 5;
}

message AddSchedulerRequest {
    int32 interval = 1;
    oneof check {
        TcpCheck tcp_check = 2;
        SiteMapCheck sitemap_check = 3;
        GrpcCheck grpc_check = 4;
        HttpCheck http_check = 5;
        MongoCheck mongo_check = 6;
        PostgresCheck postgres_check = 7;
        CassandraCheck cassandra_check = 8;
        MysqlCheck mysql_check = 9;
    }
}

message AddSchedulerResponse {
    string id = 1;
}

message RemoveSchedulerRequest {
    string id = 1;
}

message RemoveSchedulerResponse {
    string id = 1;
}

message RunSchedulerRequest {
    string id = 1;
}

message StopSchedulerRequest {
    string id = 1;
}

message RunSchedulerResponse {
    string id = 1;
}

message StopSchedulerResponse {
    string id = 1;
}