syntax = 'proto3';

package squzy.agents.v1.agent;

import "google/protobuf/timestamp.proto";

service AgentServer {
    rpc Register (RegisterRequest) returns (RegisterResponse) {
    }
    rpc UnRegister(UnRegisterRequest) returns (UnRegisterResponse) {}
    rpc SendStat(stream SendStatRequest) returns (SendStatResponse) {}
    rpc GetList (GetListRequest) returns (GetListResponse) {
    }
}

enum AgentStatus {
    RUNNED = 0;
    STOPPED = 1;
    DISCONNECTED = 2;
}

message GetListRequest {
}

message GetListResponse {
    repeated AgentItem agents = 1;
}

message SendStatResponse {

}

message UnRegisterRequest {
    string id = 1;
}

message UnRegisterResponse {
    string id = 1;
}

message RegisterRequest {
    HostInfo hostInfo = 1;
}

message AgentItem {
    string id = 1;
    AgentStatus status = 2;
}

message HostInfo {
    string host_name = 1;
    string os = 2;
    PlatformInfo platform_info = 3;
}

message PlatformInfo {
    string name = 1;
    string family = 2;
    string version = 3;
}

message RegisterResponse {
    string id = 1;
}

// Description of agent

message SendStatRequest {
    string id = 1;
    CpuInfo cpu_info = 2;
    MemoryInfo memory_info = 3;
    DiskInfo disk_info = 4;
    NetInfo net_info = 5;
    google.protobuf.Timestamp time = 6;
}

message CpuInfo {
    message CPU {
        double load = 1;
    }
    repeated CPU cpus = 1;
}

message MemoryInfo {
    message Memory {
        uint64 total = 1;
        uint64 used = 2;
        uint64 free = 3;
        uint64 shared = 4;
        double usedPercent = 5;
    }
    Memory mem = 1;
    Memory swap = 2;
}

message DiskInfo {
    message Disk {
        uint64 total = 1;
        uint64 free = 2;
        uint64 used = 3;
        double usedPercent = 4;
    }
    map<string, Disk> disks = 1;
}

message NetInfo {
    uint64 bytesSent = 1;
    uint64 bytesRecv = 2;
    uint64 packetsSent = 3;
    uint64 packetsRecv = 4;
    // total number of errors while receiving
    uint64 errIn = 5;
    // total number of errors while sending
    uint64 errOut = 6;
    // total number of incoming packets which were dropped
    uint64 dropIn = 7;
    // total number of outgoing packets which were dropped (always 0 on OSX and BSD)
    uint64 dropOut = 8;
}

